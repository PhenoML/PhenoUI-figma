{
  "version": 3,
  "sources": ["../node_modules/mersenne-twister/src/mersenne-twister.js", "../node_modules/polyfill-crypto.getrandomvalues/index.js", "../src/shared/Metadata.ts", "../src/plugin/metadata.ts", "../src/plugin/screens.ts", "../src/plugin/execute.ts", "../src/plugin/tools/export/userdata.ts", "../src/plugin/tools/export/export.ts", "../src/plugin/Strapi.ts", "../src/plugin/PhenoUI.ts", "../node_modules/uuid/dist/esm-browser/rng.js", "../node_modules/uuid/dist/esm-browser/stringify.js", "../node_modules/uuid/dist/esm-browser/native.js", "../node_modules/uuid/dist/esm-browser/v4.js", "../src/shared/MessageBus.ts", "../src/plugin/mod.ts"],
  "sourcesContent": ["/*\n  https://github.com/banksean wrapped Makoto Matsumoto and Takuji Nishimura's code in a namespace\n  so it's better encapsulated. Now you can have multiple random number generators\n  and they won't stomp all over eachother's state.\n\n  If you want to use this as a substitute for Math.random(), use the random()\n  method like so:\n\n  var m = new MersenneTwister();\n  var randomNumber = m.random();\n\n  You can also call the other genrand_{foo}() methods on the instance.\n\n  If you want to use a specific seed in order to get a repeatable random\n  sequence, pass an integer into the constructor:\n\n  var m = new MersenneTwister(123);\n\n  and that will always produce the same random sequence.\n\n  Sean McCullough (banksean@gmail.com)\n*/\n\n/*\n   A C-program for MT19937, with initialization improved 2002/1/26.\n   Coded by Takuji Nishimura and Makoto Matsumoto.\n\n   Before using, initialize the state by using init_seed(seed)\n   or init_by_array(init_key, key_length).\n\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n\n     1. Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n\n     2. Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n\n     3. The names of its contributors may not be used to endorse or promote\n        products derived from this software without specific prior written\n        permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n   Any feedback is very welcome.\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n*/\n\nvar MersenneTwister = function(seed) {\n\tif (seed == undefined) {\n\t\tseed = new Date().getTime();\n\t}\n\n\t/* Period parameters */\n\tthis.N = 624;\n\tthis.M = 397;\n\tthis.MATRIX_A = 0x9908b0df;   /* constant vector a */\n\tthis.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n\tthis.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n\tthis.mt = new Array(this.N); /* the array for the state vector */\n\tthis.mti=this.N+1; /* mti==N+1 means mt[N] is not initialized */\n\n\tif (seed.constructor == Array) {\n\t\tthis.init_by_array(seed, seed.length);\n\t}\n\telse {\n\t\tthis.init_seed(seed);\n\t}\n}\n\n/* initializes mt[N] with a seed */\n/* origin name init_genrand */\nMersenneTwister.prototype.init_seed = function(s) {\n\tthis.mt[0] = s >>> 0;\n\tfor (this.mti=1; this.mti<this.N; this.mti++) {\n\t\tvar s = this.mt[this.mti-1] ^ (this.mt[this.mti-1] >>> 30);\n\t\tthis.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253)\n\t\t+ this.mti;\n\t\t/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\t\t/* In the previous versions, MSBs of the seed affect   */\n\t\t/* only MSBs of the array mt[].                        */\n\t\t/* 2002/01/09 modified by Makoto Matsumoto             */\n\t\tthis.mt[this.mti] >>>= 0;\n\t\t/* for >32 bit machines */\n\t}\n}\n\n/* initialize by an array with array-length */\n/* init_key is the array for initializing keys */\n/* key_length is its length */\n/* slight change for C++, 2004/2/26 */\nMersenneTwister.prototype.init_by_array = function(init_key, key_length) {\n\tvar i, j, k;\n\tthis.init_seed(19650218);\n\ti=1; j=0;\n\tk = (this.N>key_length ? this.N : key_length);\n\tfor (; k; k--) {\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30)\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525)))\n\t\t+ init_key[j] + j; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++; j++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t\tif (j>=key_length) j=0;\n\t}\n\tfor (k=this.N-1; k; k--) {\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941))\n\t\t- i; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t}\n\n\tthis.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n}\n\n/* generates a random number on [0,0xffffffff]-interval */\n/* origin name genrand_int32 */\nMersenneTwister.prototype.random_int = function() {\n\tvar y;\n\tvar mag01 = new Array(0x0, this.MATRIX_A);\n\t/* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n\tif (this.mti >= this.N) { /* generate N words at one time */\n\t\tvar kk;\n\n\t\tif (this.mti == this.N+1)  /* if init_seed() has not been called, */\n\t\t\tthis.init_seed(5489);  /* a default initial seed is used */\n\n\t\tfor (kk=0;kk<this.N-this.M;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\tfor (;kk<this.N-1;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+(this.M-this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\ty = (this.mt[this.N-1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n\t\tthis.mt[this.N-1] = this.mt[this.M-1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n\t\tthis.mti = 0;\n\t}\n\n\ty = this.mt[this.mti++];\n\n\t/* Tempering */\n\ty ^= (y >>> 11);\n\ty ^= (y << 7) & 0x9d2c5680;\n\ty ^= (y << 15) & 0xefc60000;\n\ty ^= (y >>> 18);\n\n\treturn y >>> 0;\n}\n\n/* generates a random number on [0,0x7fffffff]-interval */\n/* origin name genrand_int31 */\nMersenneTwister.prototype.random_int31 = function() {\n\treturn (this.random_int()>>>1);\n}\n\n/* generates a random number on [0,1]-real-interval */\n/* origin name genrand_real1 */\nMersenneTwister.prototype.random_incl = function() {\n\treturn this.random_int()*(1.0/4294967295.0);\n\t/* divided by 2^32-1 */\n}\n\n/* generates a random number on [0,1)-real-interval */\nMersenneTwister.prototype.random = function() {\n\treturn this.random_int()*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n}\n\n/* generates a random number on (0,1)-real-interval */\n/* origin name genrand_real3 */\nMersenneTwister.prototype.random_excl = function() {\n\treturn (this.random_int() + 0.5)*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n}\n\n/* generates a random number on [0,1) with 53-bit resolution*/\n/* origin name genrand_res53 */\nMersenneTwister.prototype.random_long = function() {\n\tvar a=this.random_int()>>>5, b=this.random_int()>>>6;\n\treturn(a*67108864.0+b)*(1.0/9007199254740992.0);\n}\n\n/* These real versions are due to Isaku Wada, 2002/01/09 added */\n\nmodule.exports = MersenneTwister;\n", "var MersenneTwister = require('mersenne-twister')\n\nvar twister = new MersenneTwister(Math.random()*Number.MAX_SAFE_INTEGER)\n\nmodule.exports = getRandomValues\n\n\nfunction getRandomValues (abv) {\n  var l = abv.length\n  while (l--) {\n    abv[l] = Math.floor(randomFloat() * 256)\n  }\n  return abv\n}\n\nfunction randomFloat() {\n  return twister.random()\n}", "export enum LayerMetadata {\n    strapiServer = 'com.phenoui.strapi.auth.server',\n    strapiUser = 'com.phenoui.strapi.auth.user',\n    strapiJWT = 'com.phenoui.strapi.auth.token',\n\n    strapiCategory = 'com.phenoui.strapi.category',\n    currentPage = 'com.phenoui.figma.current.page',\n\n    widgetOverride = 'com.phenoui.layer.widget_override',\n\n    githubAccessToken = 'com.phenoui.github.auth.token',\n}\n\nexport const MetadataDefaults = {\n    [LayerMetadata.strapiServer]: 'http://localhost:1337',\n} as const;\n\nexport type MetadataDefaultsType = typeof MetadataDefaults[keyof typeof MetadataDefaults];", "import {UINode} from \"./tools/export/export\";\nimport {PropertyBinding, UserDataValue} from './Strapi';\n\nexport function updateMetadata(node: UINode, key: string, value: UserDataValue) {\n    if (!node.getPluginData(key)) {\n        node.setRelaunchData({ open: ''});\n    }\n    node.setPluginData(key, JSON.stringify(value));\n}\n\nexport function getMetadata(node: UINode, key: string): UserDataValue {\n    try {\n        return JSON.parse(node.getPluginData(key));\n    } catch (e) {\n        console.error(e);\n        updateMetadata(node, key, '');\n        return '';\n    }\n}\n\nexport async function setLocalData(key: string, value: string | number | boolean) {\n    await figma.clientStorage.setAsync(key, value);\n}\n\nexport async function getLocalData(key: string): Promise<string | number | boolean> {\n    return await figma.clientStorage.getAsync(key);\n}\n", "import {AvailableScreens} from \"../shared/AvailableScreens\";\nimport {MessageBus} from \"../shared/MessageBus\";\nimport {LayerMetadata} from \"../shared/Metadata\";\nimport {getLocalData, getMetadata} from \"./metadata\";\nimport {LayerScreenData} from \"../shared/MessageBusTypes\";\nimport {AvailableTabs} from \"../shared/AvailableTabs\";\nimport {LayerData} from \"../ui/tools/layer\";\n\nexport function showEmptyScreen(bus: MessageBus) {\n    bus.execute('updateScreen', { screen: AvailableScreens.empty });\n}\n\nexport function showErrorScreen(bus: MessageBus, title: string, description: string) {\n    bus.execute('updateScreen', {\n        screen: AvailableScreens.error,\n        error: {\n            title,\n            description,\n        }\n    });\n}\n\nexport async function showStrapiLoginScreen(bus: MessageBus, api: PluginAPI, error?: string) {\n    bus.execute('updateScreen', {\n        screen: AvailableScreens.strapi_login,\n        credentials: {\n            id: api.root.id,\n            server: await getLocalData(LayerMetadata.strapiServer) as string,\n            user: await getLocalData(LayerMetadata.strapiUser) as string,\n            error,\n        }\n    });\n}\n\nexport function showGithubLoginScreen(bus: MessageBus, api: PluginAPI, error?: string) {\n    const node = api.currentPage.selection[0];\n    bus.execute('updateScreen', {\n        screen: AvailableScreens.github_login,\n        credentials: {\n            id: api.root.id,\n            layerName: node.name,\n            error,\n        },\n    });\n}\n\nfunction _tabToLayerScreen(tab: AvailableTabs): AvailableScreens {\n    switch (tab) {\n        case AvailableTabs.figma:\n            return AvailableScreens.figma_layer;\n        case AvailableTabs.github:\n            return AvailableScreens.github_layer;\n        case AvailableTabs.strapi:\n            return AvailableScreens.strapi_layer;\n    }\n}\n\nexport function showLayerScreen(bus: MessageBus, data: LayerData, tab: AvailableTabs) {\n\n    bus.execute('updateScreen', Object.assign({ screen: _tabToLayerScreen(tab) }, data) as LayerScreenData);\n}\n\n", "import {Strapi, TypeSpec} from \"./Strapi\";\nimport {\n    exportNode,\n    fetchValue,\n    figmaTypeToWidget,\n    MappingAction,\n    MappingEntry,\n    MappingSpec,\n    MappingString, processSpec,\n    resolvePath,\n    UINode\n} from \"./tools/export/export\";\n\nconst funcRegex = /([^(]+)\\((.*)\\)\\s*$/;\nconst splitArgsRegex = /,(?![^()[\\]]+[)\\]])/;\n\ntype ExecutionContext = {\n    node: UINode,\n    cache: Map<string, any>,\n    strapi: Strapi,\n}\n\nconst builtInMethods: { [key: string]: Function } = {\n    hello: (context: ExecutionContext, subject: string) => {\n        const r = `Hello ${subject}!`\n        console.log(r);\n        return r;\n    },\n    exportSVG: async (context: ExecutionContext, node: SceneNode) => {\n        return await node.exportAsync({ format: 'SVG_STRING', useAbsoluteBounds: true });\n    },\n    exportPNG: async (context: ExecutionContext, node: SceneNode) => {\n        const bytes = await node.exportAsync({ format: 'PNG', useAbsoluteBounds: true, constraint: { type: 'SCALE', value: 3 } });\n        return figma.base64Encode(bytes);\n    },\n    exportJPEG: async (context: ExecutionContext, node: SceneNode) => {\n        const bytes = await node.exportAsync({ format: 'JPG', useAbsoluteBounds: true, constraint: { type: 'SCALE', value: 3 } });\n        return figma.base64Encode(bytes);\n    },\n    nativeType: (context: ExecutionContext, node: any) => figmaTypeToWidget(node),\n    getVariants: async (context: ExecutionContext, node: FrameNode, baseSpec: TypeSpec) => {\n        const variants: any = {};\n        const mappings = Object.assign({}, baseSpec.mappings);\n        for (let i = 0, n = node.children.length; i < n; ++i) {\n            variants[node.children[i].name] = _overrideSource(mappings, `children[${i}]`);\n        }\n        return processSpec(context.cache, context.strapi, node, variants);\n    },\n    nodeAsType: async (context: ExecutionContext, node: UINode, type: string) => {\n            return await exportNode(context.cache, context.strapi, node, type);\n    },\n    firstVisibleProperty: (context: ExecutionContext, entries: any[], property: string) => {\n        for (const entry of entries) {\n            if (entry.visible) {\n                return entry[property] ?? null;\n            }\n        }\n        return null;\n    },\n    firstVisibleEntry: (context: ExecutionContext, entries: any[]) => {\n        for (const entry of entries) {\n            if (entry.visible) {\n                return entry;\n            }\n        }\n        return null;\n    }\n}\n\nexport async function execute(cache: Map<string, any>, strapi: Strapi, node: UINode, instruction: string): Promise<any> {\n    const components = funcRegex.exec(instruction);\n    if (components) {\n        const funcPath = components[1];\n        const argsDefs = components[2].split(splitArgsRegex);\n        const args = [];\n        for (const def  of argsDefs) {\n            if (def.trim()) {\n                args.push(await fetchValue(cache, strapi, node, def.trim() as MappingString, true));\n            }\n        }\n\n        if (funcPath in builtInMethods) {\n            const context: ExecutionContext = {\n                node,\n                cache,\n                strapi,\n            }\n            return await builtInMethods[funcPath](context, ...args);\n        } else {\n            const funcComps = funcPath.split('.');\n            const solved = resolvePath(node, funcComps);\n            if (solved) {\n                return await solved.value.apply(solved.parent, args);\n            }\n        }\n    }\n    return null;\n}\n\nfunction _overrideSource(spec: MappingSpec, source: string): MappingSpec {\n    if (Array.isArray(spec)) {\n        const result = [];\n        for (const entry of spec) {\n            if (typeof entry as any === 'string') {\n                result.push(`${MappingAction.source}${source}${MappingAction.source}${entry}`);\n            } else {\n                result.push(_overrideSource(entry as MappingSpec, source));\n            }\n        }\n        return result as MappingSpec;\n    }\n\n    const result: any = {};\n    for (const key of Object.keys(spec)) {\n        const entry: MappingEntry = spec[key];\n        if (typeof entry as any === 'string') {\n            result[key] = `${MappingAction.source}${source}${MappingAction.source}${entry}`;\n        } else {\n            result[key] = _overrideSource(entry as MappingSpec, source);\n        }\n    }\n    return result;\n}\n", "import {PropertyBinding, UserDataSpec} from \"../../Strapi\";\nimport {getMetadata} from \"../../metadata\";\nimport {findNode, UINode} from \"./export\";\n\nexport function getComponentProperty(node: UINode, key: string) {\n    if (node.type === 'COMPONENT' || node.type === 'COMPONENT_SET') {\n        const k = node.componentPropertyDefinitions[key] ? key : key.split(/#(?!.*#)/)[0];\n        if (node.componentPropertyDefinitions[k]) {\n            return {\n                value: node.componentPropertyDefinitions[k].defaultValue,\n                valueType: node.componentPropertyDefinitions[k].type,\n            };\n        }\n    } else {\n        const instanceNode = node as InstanceNode;\n        const k = instanceNode.componentProperties[key] ? key : key.split(/#(?!.*#)/)[0];\n        if (instanceNode.componentProperties[k]) {\n            return {\n                value: instanceNode.componentProperties[k].value,\n                valueType: instanceNode.componentProperties[k].type,\n            };\n        }\n    }\n    return undefined;\n}\n\nfunction _getVariantOptions(node: UINode, key: string) {\n    let componentNode: any = node;\n    while (componentNode.type !== 'COMPONENT_SET' && componentNode.parent) {\n        if ('mainComponent' in componentNode) {\n            componentNode = componentNode.mainComponent;\n        } else {\n            componentNode = componentNode.parent;\n        }\n    }\n    if (componentNode) {\n        const k = componentNode.componentPropertyDefinitions[key] ? key : key.split(/#(?!.*#)/)[0];\n        const variantOptions = componentNode.componentPropertyDefinitions[k].variantOptions;\n        if (variantOptions) {\n            const options = [];\n            for (const option of variantOptions) {\n                options.push({\n                    value: option,\n                    label: option,\n                });\n            }\n            return options;\n        }\n    }\n    return [];\n\n}\n\nexport function getUserData(node: UINode, type: string, userData: UserDataSpec, parentType?: string) {\n    for (const key of Object.keys(userData)) {\n        // skip the layout object\n        // sorry future Dario, this is a hack and should probably be switched to use a dedicated field in strapi\n        if (key === '__layout__') {\n            continue;\n        }\n\n        const valueKey = parentType ? `${type}_${parentType}_${key}` : `${type}_${key}`;\n        const value = getMetadata(node, valueKey);\n        // make a copy of the object to avoid overwriting the original one\n        userData[key] = Object.assign({}, userData[key]);\n        const data = userData[key];\n        switch (data.type) {\n            case 'number':\n                if (typeof value === 'string') {\n                    if (Boolean(value)) {\n                        data.value = parseFloat(value as string);\n                    }\n                } else {\n                    data.value = value as number;\n                }\n                break;\n\n            case 'componentProperty':\n                const propNode = findNode(figma, data.nodeId);\n                if (propNode) {\n                    Object.assign(data, getComponentProperty(propNode, data.key));\n                    if (data.valueType === 'VARIANT') {\n                        data.options = _getVariantOptions(propNode, data.key);\n                    }\n                }\n                break;\n\n            case 'union':\n                data.fields = getUserData(node, type, data.fields, parentType ? `${parentType}_${key}` : key);\n                break;\n\n            default:\n                data.value = value as string | boolean | PropertyBinding;\n                break;\n        }\n    }\n\n    return userData;\n}", "import {LayerMetadata} from \"../../../shared/Metadata\";\nimport {Strapi, TypeSpec, UserDataSpec} from \"../../Strapi\";\nimport {getMetadata} from \"../../metadata\";\nimport {execute} from \"../../execute\";\nimport {getUserData} from \"./userdata\";\n\nexport enum MappingAction {\n    literal = '!',\n    valuePath = '#',\n    nodePath = '$',\n    inherit = '@',\n    execute = '%',\n    source = '*',\n}\n\nexport type MappingString = `${MappingAction}${string}`;\n\ntype MappingSpecObj = {\n    [key: string]: MappingString | MappingSpec | MappingString[] | MappingSpec[] | number | boolean | null;\n}\nexport type MappingEntry = MappingSpecObj[keyof MappingSpecObj];\ntype MappingSpecArr = MappingEntry[];\nexport type MappingSpec = MappingSpecObj | MappingSpecArr;\n\nexport type UINode = DocumentNode | SceneNode | PageNode;\n\nexport function findNode(api: PluginAPI, id: string): UINode | null {\n    if (id === api.root.id) {\n        return api.root;\n    } else if (id === api.currentPage.id || id === LayerMetadata.currentPage) {\n        return api.currentPage;\n    }\n    return api.getNodeById(id) as (UINode | null);\n}\n\nexport function findComponentOrInstance(node: UINode): UINode | null {\n    if (node.type === 'COMPONENT') {\n        if (node.parent && node.parent.type === 'COMPONENT_SET') {\n            return node.parent as UINode;\n        }\n        return node;\n    } else if (node.type === 'INSTANCE' || node.type === 'COMPONENT_SET') {\n        return node as UINode;\n    }\n\n    if (node.parent) {\n        return findComponentOrInstance(node.parent as UINode);\n    }\n\n    return null;\n}\n\nexport function figmaTypeToWidget(node: UINode): string {\n    switch (node.type) {\n        case 'COMPONENT':\n            if (node.parent && node.parent.type === 'COMPONENT_SET') {\n                return node.parent.name;\n            }\n            return node.name;\n        case 'COMPONENT_SET':\n            return node.name;\n\n        case 'FRAME':\n            return 'Frame'\n\n        case 'INSTANCE':\n            const main = (node.mainComponent as UINode);\n            if (main.parent && main.parent.type === 'COMPONENT_SET') {\n                return main.parent.name;\n            }\n            return main.name;\n\n        default:\n            return `${node.type.charAt(0).toUpperCase()}${node.type.slice(1).toLowerCase()}`;\n    }\n}\n\nexport function resolvePath(obj: any, path: string[]): { value: any, parent: any } {\n    let parent = null;\n    let value = obj;\n    for (const comp of path) {\n        if (!comp) {\n            continue;\n        }\n        const openBracket = comp.indexOf('[');\n        const closeBracket = comp.indexOf(']');\n        if (openBracket !== -1 && closeBracket !== -1) {\n            const base = comp.substring(0, openBracket);\n            const index = comp.substring(openBracket + 1, closeBracket);\n            if (!(base in value) || !(index in value[base])) {\n                return { value: null, parent };\n            }\n            parent = value[base];\n            value = value[base][index];\n        } else {\n            if (!(comp in value)) {\n                return { value: null, parent };\n            }\n            parent = value;\n            value = value[comp];\n        }\n    }\n    return { value, parent };\n}\n\nexport async function fetchValue(cache: Map<string, any>, strapi: Strapi, node: UINode, mapping: MappingString, rawNodes: boolean = false): Promise<any> {\n    const operator = mapping.substring(0, 1);\n    const path = mapping.substring(1);\n    switch (operator) {\n        case MappingAction.literal:\n            try {\n                return JSON.parse(path);\n            } catch (e) {\n                return path;\n            }\n\n        case MappingAction.valuePath:\n            return JSON.parse(JSON.stringify(resolvePath(node, path.split('.')).value));\n\n        case MappingAction.nodePath:\n            const solved = resolvePath(node, path.split('.'));\n            const fetched = solved.value;\n            if (!rawNodes) {\n                if (Array.isArray(fetched)) {\n                    const value = [];\n                    for (const n of fetched) {\n                        if (n.visible) {\n                            const exported = await exportNode(cache, strapi, n);\n                            value.push(exported);\n                        }\n                    }\n                    return value;\n                } else if (fetched) {\n                    if (fetched.visible) {\n                        return await exportNode(cache, strapi, fetched);\n                    }\n                    return null;\n                }\n            }\n            return fetched;\n\n        case MappingAction.inherit:\n            const spec = await strapi.getTypeSpec(path, cache);\n            if (!spec || rawNodes) {\n                return spec;\n            }\n            return await processSpec(cache, strapi, node, spec.mappings);\n\n        case MappingAction.execute:\n            return await execute(cache, strapi, node, path);\n\n        case MappingAction.source:\n            const components = path.split(MappingAction.source);\n            const source: any = resolvePath(node, components[0].split('.')).value;\n            return await fetchValue(cache, strapi, source, components[1] as MappingString);\n\n        default:\n            throw `ERROR parsing - Unrecognized mapping operator [${operator}] for mapping ${mapping}`;\n    }\n}\n\nfunction _isObject(val: any): boolean {\n    return typeof val === 'object' && !Array.isArray(val) && val !== null;\n}\n\nexport async function processSpec(cache: Map<string, any>, strapi: Strapi, node: UINode, spec: MappingSpec): Promise<any> {\n    if (Array.isArray(spec)) {\n        const result = [];\n        for (const entry of spec) {\n            if (typeof entry as any === 'string') {\n                result.push(await fetchValue(cache, strapi, node, entry as MappingString));\n            } else if (typeof entry as any === 'number' || entry === null || entry === true || entry === false) {\n                result.push(entry);\n            } else {\n                result.push(await processSpec(cache, strapi, node, entry as MappingSpec));\n            }\n        }\n        return result;\n    }\n\n    const result: any = {};\n    for (const key of Object.keys(spec)) {\n        const entry: MappingEntry = spec[key];\n        const keyPath = key.split('.');\n        let base = result;\n        let prop = keyPath.shift() as string;\n        while (keyPath.length) {\n            if (!_isObject(base[prop])) {\n                base[prop] = {} as any;\n            }\n            base = base[prop];\n            prop = keyPath.shift() as string;\n        }\n\n        let val;\n        if (typeof entry as any === 'string') {\n            val = await fetchValue(cache, strapi, node, entry as MappingString);\n        } else if (typeof entry as any === 'number' || entry === null || entry === true || entry === false) {\n            val = entry;\n        } else {\n            val = await processSpec(cache, strapi, node, entry as MappingSpec);\n        }\n\n        if (_isObject(val) && _isObject(base[prop])) {\n            base[prop] = Object.assign({}, base[prop], val);\n        } else {\n            base[prop] = val;\n        }\n    }\n    return result;\n}\n\nfunction _getUserDataExport(node: UINode, type: string, userData: UserDataSpec | null) {\n    if (!userData) {\n        return null;\n    }\n    const withValues = getUserData(node, type, userData);\n    const result: { [key: string]: any } = {};\n    for (const key of Object.keys(userData)) {\n        const entry = withValues[key];\n        result[key] = entry.value;\n        if (result[key] === '' || result[key] === null || result[key] === undefined) {\n            result[key] = entry.default;\n            if (entry.type === 'group') {\n                result[key] = {\n                    type: 'group',\n                    properties: result[key] || [],\n                }\n            } else if (entry.type === 'union') {\n                const fields = entry.fields;\n                const fieldKeys = Object.keys(fields);\n                const fieldValues = fieldKeys.map(k => ({ [k]: fields[k].value ?? fields[k].default }));\n                result[key] = {\n                    type: 'union',\n                    fields: Object.assign({}, ...fieldValues),\n                }\n                console.log('Union', result[key]);\n            }\n        }\n    }\n    return result;\n}\n\nexport async function getTypeSpec(type: string, node: UINode, strapi: Strapi, cache?: Map<string, any>, useDefaultCache: boolean = false): Promise<TypeSpec | null> {\n    let typeData = await strapi.getTypeSpec(type, cache, useDefaultCache);\n    if (!typeData && (node.type === 'COMPONENT' || node.type === 'INSTANCE' || node.type === 'COMPONENT_SET')) {\n        let componentType: string;\n        switch (node.type) {\n            case 'COMPONENT':\n                componentType = 'FigmaComponent';\n                break;\n\n            case 'COMPONENT_SET':\n                componentType = 'FigmaComponentSet';\n                break;\n\n            default:\n                componentType = 'FigmaComponentInstance';\n                break;\n        }\n\n        typeData = await strapi.getTypeSpec(componentType, cache, useDefaultCache);\n    } else if (!typeData) {\n        typeData = await strapi.getTypeSpec('_missing_type', cache, useDefaultCache);\n        if (typeData) {\n            typeData.mappings = [\n                `@${figmaTypeToWidget(node)}`,\n                {\n                    type: `!${type}`\n                }\n            ];\n            await strapi.resolveSpecMappings(typeData, cache, useDefaultCache);\n        }\n    }\n\n    if (typeData && (node.type === 'COMPONENT' || node.type === 'INSTANCE' || node.type === 'COMPONENT_SET')) {\n        const componentProps: UserDataSpec = _findComponentPropertiesRecursive(node);\n\n        // if the node has a component parent, add a boolean property to allow the user to override the component's\n        // properties via the parent\n        const baseComponent = findComponentOrInstance(node);\n        if (baseComponent && baseComponent.parent) {\n            const parentComponent = findComponentOrInstance(baseComponent.parent as UINode);\n            if (parentComponent && parentComponent.id !== baseComponent.id) {\n                componentProps['overrideComponentProperties'] = {\n                    type: 'boolean',\n                    default: true,\n                    description: 'Use ancestors properties',\n                };\n            }\n        }\n\n        typeData.userData = Object.assign({}, typeData.userData, componentProps);\n    }\n    return typeData;\n}\n\nfunction _findComponentPropertiesRecursive(node: UINode): UserDataSpec {\n    const componentProps: UserDataSpec = {};\n\n    if (node.type === 'COMPONENT' || node.type === 'INSTANCE' || node.type === 'COMPONENT_SET') {\n        const properties = node.type === 'COMPONENT' || node.type === 'COMPONENT_SET' ? node.componentPropertyDefinitions : node.componentProperties;\n        for (let key in properties) {\n            key = properties[key].type === 'VARIANT' ? `${key}#variant` : key;\n            const [description, propertyId] = key.split(/#(?!.*#)/);\n            componentProps[key] = {\n                description,\n                type: 'componentProperty',\n                key,\n                nodeId: node.id,\n                propertyId,\n            }\n        }\n    }\n    if (node.type !== 'COMPONENT_SET' && 'children' in node) {\n        for (const child of node.children) {\n            const childProps = _findComponentPropertiesRecursive(child as UINode);\n            if (Object.keys(childProps).length) {\n                // only assign the child properties if they are not already defined\n                for (const key of Object.keys(childProps)) {\n                    if (!(key in componentProps)) {\n                        componentProps[key] = childProps[key];\n                    }\n                }\n            }\n        }\n    }\n    return componentProps;\n}\n\nexport async function exportNode(cache: Map<string, any>, strapi: Strapi, node: UINode, overrideType?: string) {\n    try {\n        const type = overrideType || getMetadata(node, LayerMetadata.widgetOverride) as string || figmaTypeToWidget(node);\n        const spec = await getTypeSpec(type, node, strapi, cache);\n        if (!spec) {\n            return null;\n        }\n\n        let result = await processSpec(cache, strapi, node, spec.mappings);\n        // if the result is an array, merge all the objects in order\n        if (Array.isArray(result)) {\n            result = Object.assign({}, ...result);\n        }\n\n        const infoSpec = await getTypeSpec('__info', { type: 'FRAME' } as any, strapi, cache) as TypeSpec;\n        result['__info'] = await processSpec(cache, strapi, node, infoSpec.mappings);\n\n        const userData = _getUserDataExport(node, type, spec.userData);\n        if (userData) {\n            result['__userData'] = userData;\n        }\n\n        return result;\n    } catch (e) {\n        console.error(e);\n        throw e;\n    }\n}\n\nexport async function exportToFlutter(strapi: Strapi, node: UINode): Promise<any> {\n    const cache = new Map<string, any>();\n    return await exportNode(cache, strapi, node);\n}\n\nfunction _exportValue(value: any, cache: Set<BaseNode>): any {\n    // if it's a null, string, number, or boolean, just return it\n    if (value === null || typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        return value;\n    }\n\n    // if it's an array, export each value\n    if (Array.isArray(value)) {\n        return value.map(v => _exportValue(v, cache));\n    }\n\n\n\n    // if it's an object, export each value\n    if (typeof value === 'object') {\n        const result: any = {};\n        if ('type' in value && typeof value.type === 'string') {\n            if (cache.has(value)) {\n                return value.id;\n            }\n            cache.add(value);\n            for (const key in value) {\n                if (key === 'parent' || key === 'mainComponent' || key === 'masterComponent') {\n                    result[key] = value[key].id;\n                } else if (key === 'defaultVariant') {\n                    result[key] = {\n                        id: value[key].id,\n                        name: value[key].name,\n                    };\n                } else {\n                    try {\n                        result[key] = _exportValue(value[key], cache);\n                    } catch (_) {\n                        result[key] = null;\n                    }\n                }\n            }\n        } else {\n            for (const key of Object.keys(value)) {\n                result[key] = _exportValue(value[key], cache);\n            }\n        }\n        return result;\n    }\n\n    return null;\n}\n\nexport function exportRawJson(node: UINode): any {\n    try {\n        const cache: Set<BaseNode> = new Set();\n        return _exportValue(node, cache);\n    } catch (e) {\n        console.log(e);\n        return null;\n    }\n}\n\n", "import {LayerMetadata, MetadataDefaults} from \"../shared/Metadata\";\nimport {showStrapiLoginScreen} from \"./screens\";\nimport {getLocalData, setLocalData} from \"./metadata\";\nimport {MessageBus} from \"../shared/MessageBus\";\n// @ts-ignore\nimport qs from 'qs';\nimport {MappingAction} from './tools/export/export';\n\n\nexport enum StrapiEndpoints {\n    login = '/api/admins/auth-with-password',\n    widgets = '/phui/widget',\n    widgetSpecs = '/phui/widget/spec',\n    tags = '/phui/tag',\n    widgetCategories = '/api/figma-widget-categories',\n    screenCategories = '/api/screen-categories',\n    layouts = '/phui/layout',\n    media = '/phui/media',\n    files = '/phui/media/file',\n}\n\ntype UserDataObject = {\n    type: 'binding' | 'group',\n}\n\nexport type PropertyBinding = {\n    type: 'binding',\n    id: string,\n    value?: string | boolean,\n}\n\nexport type UserDataGroup = {\n    type: 'group',\n    properties: UserType[],\n}\n\nexport type UserType = {\n    description: string,\n    linkedTo?: string,\n} & ({\n    type: 'string',\n    default?: string,\n    value?: string | PropertyBinding,\n    properties?: string[],\n} | {\n    type: 'boolean',\n    default?: boolean,\n    value?: boolean | PropertyBinding,\n    properties?: string[],\n} | {\n    type: 'number',\n    default?: number,\n    value?: number,\n} | {\n    type: 'select',\n    default?: string,\n    value?: string,\n    options: Array<{\n        value: string,\n        label: string,\n    }>,\n} | {\n    type: 'componentProperty',\n    valueType?: ComponentPropertyType,\n    default?: never,\n    value?: string | number | boolean,\n    key: string,\n    nodeId: string,\n    propertyId: string,\n    options?: Array<{\n        value: string,\n        label: string,\n    }>,\n} | {\n    type: 'group',\n    default?: UserType[],\n    value?: UserDataGroup,\n} | {\n    type: 'lottie',\n    default: string | null,\n    value: string | null,\n} | {\n    type: 'union',\n    handler: UserType['type'],\n    fields: UserDataSpec,\n    value: never,\n    default: never,\n});\n\nexport type UserDataValue = Exclude<UserType['value'], undefined>;\n\nexport type UserDataSpec = {\n    [key: string]: UserType,\n}\n\nexport type TypeSpec = {\n    mappings: any,\n    userData: null | UserDataSpec,\n}\n\nexport class ForbiddenError extends Error {}\nexport class DataError extends Error {}\n\nexport class UnknownError extends Error {\n    data: any;\n    constructor(msg: string, data: any) {\n        super(msg);\n        this.data = data;\n    }\n}\n\nexport class Strapi {\n    defaultCache: Map<string, any> = new Map<string, any>()\n    api: PluginAPI;\n    server: string = '';\n    jwt: string = '';\n    loaded: Promise<void> = (async () => {\n        this.jwt = await getLocalData(LayerMetadata.strapiJWT) as string || '';\n        this.server = await getLocalData(LayerMetadata.strapiServer) as string || MetadataDefaults[LayerMetadata.strapiServer];\n    })();\n    constructor(api: PluginAPI) {\n        this.api = api;\n    }\n\n    async isLoggedIn(): Promise<boolean> {\n        await this.loaded;\n        return Boolean(this.jwt);\n    }\n\n    async logout(): Promise<void> {\n        this.jwt = '';\n        await setLocalData(LayerMetadata.strapiJWT, '');\n    }\n\n    async performLogin(bus: MessageBus, server: string, user: string, password: string) {\n        if (user && password) {\n            server = server ? server.trim() : MetadataDefaults[LayerMetadata.strapiServer];\n            const url = this._urlForEndpoint(server, StrapiEndpoints.login);\n            try {\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({identity: user, password}),\n                });\n\n                const result = await response.json();\n                if (result.token) {\n                    this.jwt = result.token;\n                    this.server = server.trim();\n                    await setLocalData(LayerMetadata.strapiUser, user);\n                    await setLocalData(LayerMetadata.strapiJWT, this.jwt);\n                    await setLocalData(LayerMetadata.strapiServer, this.server);\n                    return true;\n                } else if (result.error) {\n                    showStrapiLoginScreen(bus, this.api, result.error.message);\n                } else {\n                    showStrapiLoginScreen(bus, this.api, 'UNKNOWN ERROR, CONTACT DARIO!');\n                }\n            } catch (e: any) {\n                showStrapiLoginScreen(bus, this.api, `ERROR contacting server: ${e.message}`);\n                return false\n            }\n        } else {\n            showStrapiLoginScreen(bus, this.api, 'Please enter all the required fields');\n        }\n        return false;\n    }\n\n    async getTypeSpec(type: string, cache?: Map<string, any>, useDefaultCache: boolean = false): Promise<TypeSpec | null> {\n        if (cache && cache.has(type)) {\n            return Object.assign({}, cache.get(type));\n        }\n\n        if (useDefaultCache) {\n            if (this.defaultCache.has(type)) {\n                return Object.assign({}, this.defaultCache.get(type));\n            }\n            // return null;\n        }\n\n        const endpoint = StrapiEndpoints.widgetSpecs + '/type';\n        const url = this._urlForEndpoint(this.server, endpoint, {id: type});\n        const data = await this._fetchGET(url);\n\n        if (data) {\n            await this.resolveSpecMappings(data, cache, useDefaultCache);\n\n            if (cache) {\n                cache.set(type, data);\n            }\n            this.defaultCache.set(type, data);\n            return Object.assign({}, data);\n        }\n\n        return null;\n    }\n\n    async resolveSpecMappings(spec: TypeSpec, cache?: Map<string, any>, useDefaultCache: boolean = false) {\n        if (Array.isArray(spec.mappings)) {\n            spec.mappings = spec.mappings.map((t: any) => {\n                if (typeof t === 'string') {\n                    const operator = t.substring(0, 1);\n                    const path = t.substring(1);\n                    if (operator === MappingAction.inherit) {\n                        return this.getTypeSpec(path, cache, useDefaultCache).then(s => s?.mappings);\n                    } else {\n                        throw new DataError(`Unknown operator [${operator}] in mapping [${t}]`);\n                    }\n                }\n                return Promise.resolve(t);\n            });\n            spec.mappings = await Promise.all(spec.mappings);\n            spec.mappings = Object.assign({}, ...spec.mappings);\n        }\n    }\n\n    async getTypeList(search: string, limit: number): Promise<string[]> {\n        if (!search) {\n            return [];\n        }\n\n        const endpoint = StrapiEndpoints.widgetSpecs + '/search';\n        const url = this._urlForEndpoint(this.server, endpoint, {id: search});\n        const data = await this._fetchGET(url);\n        if (data && data.items && data.items.length) {\n            return data.items.map((d: any) => d.type);\n        }\n\n        return [];\n    }\n\n    async uploadData(collection: StrapiEndpoints, payload: any, tag: string) {\n        const path = `${tag}/${payload.name}`;\n        const existingURL = this._urlForEndpoint(this.server, `${collection}/tag`, {id: path});\n        const existing = await this._fetchGET(existingURL);\n\n        let url;\n        let method;\n        if (existing) {\n            url = this._urlForEndpoint(this.server, `${collection}/id`, { id: existing.id });\n            method = 'PATCH';\n        } else {\n            url = this._urlForEndpoint(this.server, `${collection}/tag`, { id: path });\n            method = 'POST';\n        }\n\n        const result = await this._fetchUpload(url, method, payload);\n        console.log(result);\n    }\n\n    async getCategory(collection: StrapiEndpoints, uid: string) {\n        const existingURL = this._urlForEndpoint(this.server, collection + '/path', {id: uid});\n        return await this._fetchGET(existingURL);\n    }\n\n    async createCategory(collection: StrapiEndpoints, uid: string) {\n        const existing = await this.getCategory(collection, uid);\n        if (existing) {\n            return existing.id;\n        }\n\n        const url = this._urlForEndpoint(this.server, collection + '/path', {id: uid});\n        return await this._fetchUpload(url, 'POST', null);\n    }\n\n    _urlForEndpoint(server: string, endpoint: StrapiEndpoints | string, options: { query?: string, id?: string } = {}): string {\n        server = server.endsWith('/') ? server.substring(0, server.length - 1) : server;\n        return `${server}${endpoint}${options.id ? `/${options.id}` : ''}${options.query ? `?${options.query}` : ''}`;\n    }\n\n    async _checkFetchResult(result: any) {\n        if (result.error) {\n            if (result.error.status === 403) {\n                this.jwt = '';\n                await setLocalData(LayerMetadata.strapiJWT, '');\n                throw new ForbiddenError('Forbidden, please login again');\n            } else {\n                throw new UnknownError(result.error.message, result.error);\n            }\n        }\n    }\n\n    async _fetch(url: string, method: string, headers: any, body?: string) {\n        const response = await fetch(url, {\n            method,\n            headers,\n            body,\n        });\n\n        if (!response.ok) {\n            if (response.status === 401) {\n                throw new ForbiddenError('Unauthorized, please login again');\n            } else if (response.status === 404) {\n                return null;\n            }\n        }\n\n        const result = await response.json();\n        await this._checkFetchResult(result);\n\n        return result;\n    }\n\n    async _fetchGET(url: string) {\n        return await this._fetch(url, 'GET', {\n            \"Authorization\": `Bearer ${this.jwt}`,\n        });\n    }\n\n    async _fetchUpload(url: string, method: string, data: any) {\n        return await this._fetch(url, method, {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            \"Authorization\": `Bearer ${this.jwt}`,\n        }, JSON.stringify(data));\n    }\n\n    async _fetchPOST(url: string, data: any) {\n        return await this._fetchUpload(url, 'POST', data);\n    }\n\n    async _fetchPUT(url: string, data: any) {\n        return await this._fetchUpload(url, 'PUT', data);\n    }\n}", "import {MessageBus} from \"../shared/MessageBus\";\nimport {LayerMetadata} from \"../shared/Metadata\";\nimport {\n    showEmptyScreen,\n    showErrorScreen, showGithubLoginScreen,\n    showLayerScreen,\n    showStrapiLoginScreen\n} from \"./screens\";\nimport {\n    UINode,\n    exportToFlutter,\n    findNode,\n    figmaTypeToWidget,\n    getTypeSpec,\n    findComponentOrInstance,\n    exportRawJson\n} from \"./tools/export/export\";\nimport {ForbiddenError, PropertyBinding, Strapi, StrapiEndpoints, UserDataValue} from \"./Strapi\";\nimport {getLocalData, getMetadata, setLocalData, updateMetadata} from \"./metadata\";\nimport {\n    ExportData,\n    PerformStrapiLoginData,\n    TypeListData,\n    UpdateMetadataData,\n    UploadData,\n    GetMetadataData,\n    SetTabData,\n    CategoryData,\n    StrapiEndpointUrlData,\n    SetLocalData,\n    ResizeLayerData,\n    ReplaceContentsWithSvgData,\n    ResizeUiData,\n} from \"../shared/MessageBusTypes\";\nimport {AvailableTabs} from \"../shared/AvailableTabs\";\nimport {getComponentProperty, getUserData} from \"./tools/export/userdata\";\n\nexport class PhenoUI {\n    api: PluginAPI;\n    bus: MessageBus;\n    strapi: Strapi;\n    tab: AvailableTabs = AvailableTabs.figma;\n\n    constructor(api: PluginAPI, bus: MessageBus) {\n        this.api = api;\n        this.bus = bus;\n        this.bus.executors.push(this);\n\n        this.strapi = new Strapi(this.api);\n\n        this.setupLocalEvents();\n    }\n\n    async isLoggedIn(): Promise<boolean> {\n        if (await this.strapi.isLoggedIn()) {\n            return true;\n        }\n\n        showStrapiLoginScreen(this.bus, this.api);\n        return false;\n    }\n\n    setupLocalEvents(): void {\n        this.api.on('run', async (evt) => await this.isLoggedIn() ? this.handleOpen(evt) : null);\n        this.api.on('selectionchange', async () => await this.isLoggedIn() ? this.handleSelectionChange(this.api.currentPage.selection) : null);\n        // future Dario... there are some changes we want to look for, like name changes, etc. I think that the best way\n        // to fix this is to make a method that updates the layer data without querying strapi for updates triggered by\n        // figma, and hit strapi for user triggered events. Another option could be to explicitly allow users to decide\n        // when to update the strapi data (via a refresh button or similar). I do think this is the best UX option.\n        // future future Dario... for now simply update the data without hitting strapi\n        this.api.on('documentchange', async (evt) => await this.isLoggedIn() ? this.handleDocumentChange(this.api.currentPage.selection, evt.documentChanges, true) : null);\n    }\n\n    printTypes(nodes: readonly UINode[]): void {\n        for (const node of nodes) {\n            console.log(node);\n            console.log(`${node.name} => ${node.type}`);\n            if (node.type === 'FRAME') {\n                for (const key in node) {\n                    if (key.toLowerCase().includes('layout')) {\n                        console.log(`\\t${key} => `, (node as any)[key]);\n                    }\n                }\n            } else if (node.type === 'TEXT') {\n                console.log(node.getStyledTextSegments([\n                    'fontSize',\n                    'fontName',\n                    'fontWeight',\n                    'textDecoration',\n                    'textCase',\n                    'lineHeight',\n                    'letterSpacing',\n                    'fills',\n                    'listOptions',\n                    'indentation',\n                    'hyperlink',\n                ]));\n            } else if (node.type === 'INSTANCE') {\n                console.log(node.componentProperties);\n            }\n        }\n    }\n\n    handleOpen(evt: RunEvent): void {\n        this.handleSelectionChange(figma.currentPage.selection);\n    }\n\n    handleSelectionChange(selection: readonly UINode[], useDefaultCache: boolean = false): void {\n        this.printTypes(selection);\n\n        if (selection.length > 1) {\n            // multiple objects selected\n            showErrorScreen(\n                this.bus,\n                'ERROR',\n                'This plugin cannot work while multiple objects are selected. Please select a single object to continue.'\n            );\n        } else if (selection.length === 1) {\n            // single object selected\n            this._callLayerScreenUpdate(selection[0], useDefaultCache);\n        } else {\n            // no object selected\n            showEmptyScreen(this.bus);\n        }\n    }\n\n    handleDocumentChange(selection: readonly UINode[], changes: DocumentChange[], useDefaultCache: boolean = false): void {\n        for (const change of changes) {\n            if (change.origin === 'LOCAL' && change.type === 'PROPERTY_CHANGE' && change.properties.length === 1 && change.properties[0] === 'pluginData') {\n                continue;\n            }\n\n            if ('node' in change && selection.find(n => n.id === change.node.id)) {\n                this.handleSelectionChange(selection, useDefaultCache);\n                break;\n            }\n        }\n    }\n\n    async performStrapiLogin(data: PerformStrapiLoginData) {\n        const success = await this.strapi.performLogin(this.bus, data.server, data.user, data.password);\n        if (success) {\n            this.handleSelectionChange(figma.currentPage.selection);\n        }\n    }\n\n    updateMetadata(data: UpdateMetadataData) {\n        const node = data.id === null ? this.api.root : findNode(this.api, data.id);\n        if (node) {\n             updateMetadata(node, data.key, data.value);\n        } else {\n            // just ignore... this could happen because the message passing is async and so the node could be deleted before we get this message\n            console.warn(`Node with id [${data.id}] could not be found to update its metadata`);\n        }\n    }\n\n    getMetadata(data: GetMetadataData): UserDataValue | null {\n        const node = data.id === null ? this.api.root : findNode(this.api, data.id);\n        this.api.currentPage;\n        if (node) {\n            return getMetadata(node, data.key);\n        } else {\n            // just ignore... this could happen because the message passing is async and so the node could be deleted before we get this message\n            console.warn(`Node with id [${data.id}] could not be found to get its metadata`);\n            return null;\n        }\n    }\n\n    async setLocalData(data: SetLocalData) {\n        await setLocalData(data.key, data.value);\n    }\n\n    async getLocalData(key: string): Promise<string | number | boolean> {\n        return await getLocalData(key);\n    }\n\n    updateComponentProperty(data: UpdateMetadataData) {\n        const node = data.id === null ? this.api.root : findNode(this.api, data.id);\n        if (node) {\n            if (node.type === 'COMPONENT' || node.type === 'COMPONENT_SET') {\n                try {\n                    node.editComponentProperty(data.key, {defaultValue: data.value as string | boolean});\n                } catch (e: unknown) {\n                    const key = data.key.split(/#(?!.*#)/)[0];\n                    node.editComponentProperty(key, {defaultValue: data.value as string | boolean});\n                }\n            } else if (node.type === 'INSTANCE') {\n                try {\n                    node.setProperties({[data.key]: data.value as string | boolean});\n                } catch (e: unknown) {\n                    const key = data.key.split(/#(?!.*#)/)[0];\n                    node.setProperties({[key]: data.value as string | boolean});\n                }\n            } else {\n                console.warn(`Node with id [${data.id}] is not a component or instance and so it cannot have component properties`);\n            }\n        } else {\n            // just ignore... this could happen because the message passing is async and so the node could be deleted before we get this message\n            console.warn(`Node with id [${data.id}] could not be found to update its component property`);\n        }\n    }\n\n    async setTab(data: SetTabData) {\n        if (data.tab !== this.tab) {\n            this.tab = data.tab;\n            if (this.tab === AvailableTabs.github) {\n                const loggedIn = await this.bus.execute('isGithubLoggedIn', undefined);\n                if (!loggedIn) {\n                    showGithubLoginScreen(this.bus, this.api);\n                    return;\n                }\n            }\n            this.handleSelectionChange(figma.currentPage.selection);\n        }\n    }\n\n    async strapiLogout() {\n        await this.strapi.logout();\n        this.handleSelectionChange([]);\n    }\n\n    updateLayerView() {\n        this.handleSelectionChange(figma.currentPage.selection);\n    }\n\n    async exportToFlutter(data: ExportData): Promise<any> {\n        if (!this.isLoggedIn()) {\n            return null;\n        }\n\n        const node = findNode(this.api, data.id);\n        if (!node) {\n            throw new Error(`Could not find node with ID [${data.id}] for export.`);\n        }\n\n        return exportToFlutter(this.strapi, node);\n    }\n\n    async exportRawJson(data: ExportData): Promise<any> {\n        if (!this.isLoggedIn()) {\n            return null;\n        }\n\n        const node = findNode(this.api, data.id);\n        if (!node) {\n            throw new Error(`Could not find node with ID [${data.id}] for export.`);\n        }\n\n        return exportRawJson(node);\n    }\n\n    async uploadToStrapi(data: UploadData) {\n        await this.strapi.uploadData(data.collection, data.payload, data.tag);\n    }\n\n    getStrapiJwt() {\n        return this.strapi.jwt;\n    }\n\n    getStrapiServer() {\n        return this.strapi.server;\n    }\n\n    getStrapiUrlForEndpoint(data: StrapiEndpointUrlData) {\n        return this.strapi._urlForEndpoint(this.strapi.server, data.collection, data.options);\n    }\n\n    async getCategory(data: CategoryData) {\n        return await this.strapi.getCategory(data.collection, data.uid);\n    }\n\n    async createCategory(data: CategoryData) {\n        return await this.strapi.createCategory(data.collection, data.uid);\n    }\n\n    async getTypeList(data: TypeListData): Promise<string[]> {\n        if (!await this.isLoggedIn()) {\n            return [];\n        }\n\n        try {\n            return this.strapi.getTypeList(data.search, data.limit);\n        } catch (e: unknown) {\n            if (e instanceof ForbiddenError) {\n                showStrapiLoginScreen(this.bus, this.api, e.message);\n            } else {\n                showErrorScreen(this.bus, 'ERROR', (e as Error).message);\n            }\n\n            return [];\n        }\n    }\n\n    async resizeLayer(data: ResizeLayerData) {\n        const node = findNode(this.api, data.id) as FrameNode;\n        if (node) {\n            node.resize(data.width, data.height);\n        } else {\n            // just ignore... this could happen because the message passing is async and so the node could be deleted before we get this message\n            console.warn(`Node with id [${data.id}] could not be found to resize it`);\n        }\n    }\n\n    async replaceContentsWithSvg(data: ReplaceContentsWithSvgData) {\n        const node = findNode(this.api, data.id) as FrameNode;\n        if (node) {\n            const content = this.api.createNodeFromSvg(data.svg);\n            for (const child of node.children) {\n                child.remove();\n            }\n\n            for (const child of content.children) {\n                node.appendChild(child);\n            }\n\n            content.remove();\n        } else {\n            // just ignore... this could happen because the message passing is async and so the node could be deleted before we get this message\n            console.warn(`Node with id [${data.id}] could not be found to replace its contents with svg`);\n        }\n    }\n\n    async resizeUi(data: ResizeUiData) {\n        const minWidth = 240;\n        const maxWidth = 480;\n        const minHeight = 400;\n        const maxHeight = 640;\n\n        const width = Math.min(maxWidth, Math.max(minWidth, data.width || 0));\n        const height = Math.min(maxHeight, Math.max(minHeight, data.height || 0));\n\n        this.api.ui.resize(width, height);\n    }\n\n    async getLayerSize(id: string): Promise<{width: number, height: number}> {\n        const node = findNode(this.api, id) as FrameNode;\n        if (node) {\n            return {width: node.width, height: node.height};\n        } else {\n            // just ignore... this could happen because the message passing is async and so the node could be deleted before we get this message\n            console.warn(`Node with id [${id}] could not be found to get its size`);\n            return {width: 0, height: 0};\n        }\n    }\n\n    async _callLayerScreenUpdate(node: UINode, useDefaultCache: boolean = false): Promise<void> {\n        const defaultType = figmaTypeToWidget(node);\n        const customType = getMetadata(node, LayerMetadata.widgetOverride) as string;\n        const type = customType || defaultType;\n\n        try {\n            let typeData = await getTypeSpec(type, node, this.strapi, undefined, useDefaultCache);\n\n            if (typeData && typeData.userData) {\n                typeData.userData = getUserData(node, type, typeData.userData);\n\n                const component = findComponentOrInstance(node);\n                if (component !== null) {\n                    for (const userType of Object.keys(typeData.userData)) {\n                        const typeInfo = typeData.userData[userType];\n                        if (typeof typeInfo.value === 'object' && !Array.isArray(typeInfo.value) && typeInfo.value !== null) {\n                            // hack to update old binding values to include type\n                            // if (!('type' in typeInfo.value)) {\n                            //     (typeInfo.value as any).type = 'binding';\n                            // }\n\n                            switch (typeInfo.value.type) {\n                                case 'binding':\n                                    const binding = typeInfo.value as PropertyBinding;\n                                    const propValue = getComponentProperty(component, binding.id);\n                                    binding.value = propValue?.value;\n                                    break;\n\n                                case 'group':\n                                    break;\n\n                                default:\n                                    typeInfo.value = JSON.stringify(typeInfo.value);\n                                    break;\n                            }\n                        } else if (\n                            (typeInfo.type === 'string' || typeInfo.type === 'boolean') &&\n                            (component.type === 'COMPONENT' || component.type === 'COMPONENT_SET') &&\n                            component !== node\n                        ) {\n                            const compProps = component.componentPropertyDefinitions;\n                            const properties = [];\n                            const propType = typeInfo.type === 'string' ? 'TEXT' : 'BOOLEAN';\n                            if (propType) {\n                                for (const key of Object.keys(compProps)) {\n                                    if (compProps[key].type === propType) {\n                                        properties.push(key);\n                                    }\n                                }\n                                typeInfo.properties = properties;\n                            }\n                        }\n                    }\n                }\n            }\n\n            showLayerScreen(this.bus, {\n                layer: {\n                    id: node.id,\n                    name: node.name,\n                    widgetDefault: defaultType,\n                    widgetOverride: customType,\n                    typeData,\n                    exportable: Boolean((node.parent && node.parent.type === 'PAGE') || node.type === 'COMPONENT' || node.type === 'COMPONENT_SET'),\n                }\n            }, this.tab);\n        } catch (e: unknown) {\n            if (e instanceof ForbiddenError) {\n                showStrapiLoginScreen(this.bus, this.api, e.message);\n            } else {\n                showErrorScreen(this.bus, 'ERROR', (e as Error).message);\n            }\n        }\n    }\n\n}\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "import { v4 as uuidv4 } from 'uuid';\n// @ts-ignore\nimport getRandomValues from 'polyfill-crypto.getrandomvalues';\nimport {FunctionName, FunctionParams} from \"./MessageBusTypes\";\n\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n    return getRandomValues(rnds8);\n}\n\ninterface QueueEntry {\n    id: string;\n    resolve: (value: any | PromiseLike<any>) => void;\n    reject: (reason?: any) => void;\n}\n\ntype ExecuteBusMessage = {\n    id: string;\n    type: 'execute';\n    fn: string;\n    args: any;\n}\n\ntype ResultBusMessage = {\n    id: string;\n    type: 'result';\n    result: any;\n}\n\ntype BusMessage = ExecuteBusMessage | ResultBusMessage;\n\ntype MessageEvent = {\n    data: {\n        pluginMessage: BusMessage,\n    }\n} | BusMessage;\n\ntype PluginPostMessageFn = (pluginMessage: any, options?: UIPostMessageOptions) => void;\ntype UIPostMessageFn = (message: any, targetOrigin: string, transfer?: any[]) => void;\n\ntype PluginContext = {\n    ui: {\n        on: Function,\n        postMessage: PluginPostMessageFn,\n    }\n}\n\ntype UIContext = {\n    addEventListener: Function;\n    parent: {\n        postMessage: UIPostMessageFn;\n    }\n}\n\ntype BusContext = PluginContext | UIContext;\n\nexport class MessageBus {\n    queue: Map<string, QueueEntry> = new Map();\n    ctx: BusContext;\n    env: 'ui' | 'plugin';\n    executors: any[];\n    id: string;\n    constructor(ctx: BusContext, executors: any[]) {\n        this.ctx = ctx;\n        this.executors = executors;\n        this.id = uuidv4({rng});\n\n        if (this.ctx.hasOwnProperty('ui')) {\n            this.env = 'plugin';\n            (this.ctx as PluginContext).ui.on('message', (pluginMessage: any, props?: OnMessageProperties) => this._messageHandler(pluginMessage, props));\n        } else {\n            this.env = 'ui';\n            (this.ctx as UIContext).addEventListener('message', (pluginMessage: any, props?: OnMessageProperties) => this._messageHandler(pluginMessage, props));\n        }\n    }\n\n    async _messageHandler(event: MessageEvent, props?: OnMessageProperties): Promise<void> {\n        const pluginMessage = 'data' in event ? event.data.pluginMessage : event;\n        if (pluginMessage.type === 'execute') {\n            await this._executeMessage(pluginMessage);\n        } else if (pluginMessage.type === 'result') {\n            this._resolveMessage(pluginMessage);\n        } else {\n            throw `ERROR: Unrecognized message type [${(pluginMessage as any).type}]`;\n        }\n    }\n\n    async _executeMessage(message: ExecuteBusMessage): Promise<void> {\n        for (const executor of this.executors) {\n            if (message.fn in executor && typeof executor[message.fn] === 'function') {\n                const result = await executor[message.fn](message.args);\n                this._postMessage({\n                    id: message.id,\n                    type: 'result',\n                    result,\n                });\n                return;\n            }\n        }\n        throw `ERROR: No executor can handle the fn [${message.fn}]`;\n    }\n\n    _resolveMessage(message: ResultBusMessage): void {\n        if (this.queue.has(message.id)) {\n            const entry: QueueEntry = this.queue.get(message.id) as QueueEntry;\n            this.queue.delete(message.id);\n            entry.resolve(message.result);\n            return;\n        }\n        throw `ERROR: Unrecognized queue entry ID [${message.id}]`;\n    }\n\n    _postMessage(pluginMessage: BusMessage): void {\n        if (this.env === 'ui') {\n            (this.ctx as UIContext).parent.postMessage({pluginMessage}, '*');\n        } else {\n            (this.ctx as PluginContext).ui.postMessage(pluginMessage, { origin: '*' });\n        }\n    }\n\n    async execute<T extends FunctionName>(fn: T, args: FunctionParams[T]): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const id = uuidv4({rng});\n            this.queue.set(id, { id, resolve, reject });\n            this._postMessage({ id, fn, args, type: 'execute' });\n        });\n    }\n}", "import {PhenoUI} from \"./PhenoUI\";\nimport {MessageBus} from \"../shared/MessageBus\";\n\n\n// Skip over invisible nodes and their descendants inside instances\n// for faster performance.\n// this is going to be problematic one day... a problem for future Dario!\nfigma.skipInvisibleInstanceChildren = true\n\n// install the relaunch plugin menu when nothing is selected\nfigma.root.setRelaunchData({ open: ''});\n\n// This shows the HTML page in \"ui.html\".\n// TODO: Choose a sensible size once the UI is fully designed.\nfigma.showUI(__html__, {\n    width: 240,\n    height: 400,\n    themeColors: true\n});\n\nconst messageBus = new MessageBus(figma, []);\nconst phenoUI = new PhenoUI(figma, messageBus);\nconsole.log(phenoUI); // huh? sorry future Dario!\n\n\n// // Calls to \"parent.postMessage\" from within the HTML page will trigger this\n// // callback. The callback will be passed the \"pluginMessage\" property of the\n// // posted message.\n// figma.ui.onmessage = msg => {\n//     // One way of distinguishing between different types of messages sent from\n//     // your HTML page is to use an object with a \"type\" property like this.\n//     if (msg.type === 'create-rectangles') {\n//         console.log('Hello PhenoUI!');\n//     }\n//\n//     // Make sure to close the plugin when you're done. Otherwise the plugin will\n//     // keep running, which shows the cancel button at the bottom of the screen.\n//     figma.closePlugin();\n// };\n"],
  "mappings": "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",
  "names": ["getRandomValues", "result", "result", "rnds8", "rng", "getRandomValues"]
}
